function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 2
push constant 16384
pop static 3
push static 3
push static 2
sub
push static 0
push static 2
add
pop pointer 1
pop that 0
push constant 0
push static 0
push static 2
push constant 1
add
add
pop pointer 1
pop that 0
push static 2
pop static 1
push constant 0
return
function Memory.peek 0
push static 0
push argument 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 1
push static 0
push argument 0
add
pop pointer 1
pop that 0
push constant 0
return
function Memory.alloc 3
push static 1
pop local 1
label Memory.alloc.WHILE.0
push constant 0
not
not
if-goto Memory.alloc.WHILE.1
push local 1
push constant 0
eq
not
if-goto Memory.alloc.IF.8
push constant 6
call Sys.error 1
pop temp 0
goto Memory.alloc.IF.9
label Memory.alloc.IF.8
label Memory.alloc.IF.9
push argument 0
push static 0
push local 1
add
pop pointer 1
push that 0
push constant 1
add
lt
not
if-goto Memory.alloc.IF.10
push static 0
push local 1
add
pop pointer 1
push that 0
push argument 0
sub
push constant 1
gt
not
if-goto Memory.alloc.IF.12
push local 1
push argument 0
add
push constant 1
add
pop local 2
push static 0
push local 1
add
pop pointer 1
push that 0
push argument 0
sub
push constant 1
sub
push static 0
push local 2
add
pop pointer 1
pop that 0
push static 0
push local 1
push constant 1
add
add
pop pointer 1
push that 0
push static 0
push local 2
push constant 1
add
add
pop pointer 1
pop that 0
push argument 0
push static 0
push local 1
add
pop pointer 1
pop that 0
push local 0
push constant 0
eq
not
if-goto Memory.alloc.IF.14
push local 2
pop static 1
goto Memory.alloc.IF.15
label Memory.alloc.IF.14
push local 2
push static 0
push local 0
push constant 1
add
add
pop pointer 1
pop that 0
label Memory.alloc.IF.15
goto Memory.alloc.IF.13
label Memory.alloc.IF.12
push local 0
push constant 0
eq
not
if-goto Memory.alloc.IF.16
push static 0
push local 1
push constant 1
add
add
pop pointer 1
push that 0
pop static 1
goto Memory.alloc.IF.17
label Memory.alloc.IF.16
push static 0
push local 1
push constant 1
add
add
pop pointer 1
push that 0
push static 0
push local 0
push constant 1
add
add
pop pointer 1
pop that 0
label Memory.alloc.IF.17
label Memory.alloc.IF.13
push local 1
push constant 1
add
return
goto Memory.alloc.IF.11
label Memory.alloc.IF.10
label Memory.alloc.IF.11
push local 1
pop local 0
push static 0
push local 1
push constant 1
add
add
pop pointer 1
push that 0
pop local 1
goto Memory.alloc.WHILE.0
label Memory.alloc.WHILE.1
push constant 0
return
function Memory.deAlloc 0
push static 1
push static 0
push argument 0
add
pop pointer 1
pop that 0
push argument 0
push constant 1
sub
pop static 1
push constant 0
return
