
class Fraction {
    
    field int numerator, denominator;

    constructor Fraction new(int a, int b) {
        let numerator = a;
        let denominator = b;
        do reduce();
        return this;
    }

    method void reduce() {
        var int g;
        let g = Fraction.gcd(numerator, denominator);
        if (g > 1) {
            let numerator = numerator / g;
            let denominator = denominator / g;
        }
        return;
    }

    function int gcd(int a, int b) {
        var int r;
        while (~(b = 0)) {
            let r = a - (b * (a / b));
            let a = b;
            let b = r;
        }
        return a;
    }

    method int getNumerator() {
        return numerator;
    }

    method int getDenominator() {
        return denominator;
    }

    method Fraction plus(Fraction other) {
        var int sum;
        let sum = (numerator * other.getDenominator()) + (other.getNumerator() + denominator);
        return Fraction.new(sum, denominator * other.getDenominator());
    }

    method void print() {
        do Output.printInt(numerator);
        do Output.printString("/");
        do Output.printInt(denominator);
        return;
    }
}

class Main {
    function void main() {
        var Fraction a, b, c;
        let a = Fraction.new(2, 3);
        let b = Fraction.new(1, 5);
        let c = a.plus(b);
        do c.print();
        return;
    }
}
